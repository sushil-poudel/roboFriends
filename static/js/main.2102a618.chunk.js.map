{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbar.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","height","width","CardList","robots","map","user","i","keys","Searchbar","searchfield","SearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAeeA,EAZH,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACxB,OACC,sBAAKC,UAAU,mDAAf,UACC,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,GAAMI,OAAO,MAAMC,MAAM,QAClE,gCACC,6BAAKP,IACL,4BAAIC,WCcOO,EAnBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAChB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAKC,GACf,OACC,cAAC,EAAD,CACCC,KAAMJ,EAAOG,GAAGV,GAChBA,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,cCCVa,EAbC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC9B,OAEE,uBACEC,KAAK,SACLC,YAAY,OACZf,UAAU,mCACVgB,SAAWH,KCCDI,EARF,SAACC,GACb,OACA,sBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBlB,OAAO,SAAlE,UACEe,EAAMI,SADR,QCmBcC,E,kDAnBd,WAAYL,GAAO,IAAD,8BACjB,cAAMA,IACDM,MAAO,CACXC,UAAS,GAHO,E,qDAOlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAGzB,WACC,OAAGG,KAAKJ,MAAMC,SACN,sDAEDG,KAAKV,MAAMI,a,GAhBQQ,aCgDbC,E,kDA3Cd,aAAc,IAAD,8BACZ,gBAcDC,eAAe,SAACC,GACf,EAAKJ,SAAS,CAACjB,YAAYqB,EAAMC,OAAOC,SAdxC,EAAKX,MAAM,CACTlB,OAAQ,GACRM,YAAY,IAJF,E,qDASd,WAAoB,IAAD,OACjBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAUpC,WACC,MAA2BZ,KAAKJ,MAAzBlB,EAAP,EAAOA,OAAOM,EAAd,EAAcA,YACR6B,EAAgBnC,EAAOoC,QAAO,SAACC,GACpC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASjC,EAAYgC,kBAErD,OAAQtC,EAAOwC,OAIf,sBAAK9C,UAAU,KAAf,UACC,6CACA,cAAC,EAAD,CAAWa,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQmC,WARnB,6C,GA7BaX,aCKHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAE/CX,M","file":"static/js/main.2102a618.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card =({name,email,id})=>{\r\n\treturn(\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='' src={`https://robohash.org/${id}`} height='200' width='200'/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList=({robots})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user,i)=>{\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Card  \r\n\t\t\t\t\t\t\t\tkeys={robots[i].id} \r\n\t\t\t\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst Searchbar=({searchfield, SearchChange})=>{\r\n\treturn(\r\n\r\n\t\t\t<input \r\n\t\t\t\t type='search'\r\n\t\t\t\t placeholder='robo' \r\n\t\t\t\t className='pa3 ba b--green bg-lightest-blue' \r\n\t\t\t\t onChange= {SearchChange}\r\n\t\t\t />\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n\treturn (\r\n\t<div style={{overflowY:'scroll', border:'3px solid black', height:'800px'}}>\r\n\t\t{props.children};\r\n\t</div>\t);\r\n}\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({hasError:true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>oops thats not good </h1>\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Searchbar from '../components/Searchbar';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\t\t\trobots: [],\r\n\t\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\r\ncomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>response.json())\r\n\t\t.then(users=>this.setState({robots:users}));\r\n\t}\r\n\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield:event.target.value})\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\tconst {robots,searchfield}=this.state;\r\n\t\tconst filteredRobots= robots.filter((robot)=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\t\treturn !robots.length?\r\n\t\t \t\t<h1>Loading</h1>\r\n\t:\r\n\t\t(\r\n\t\t\t<div className='tc'>  \r\n\t\t\t\t<h1>RoboFriends</h1>\r\n\t\t\t\t<Searchbar SearchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t}\r\n\t}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}